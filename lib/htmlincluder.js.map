{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/attributes/index.js","webpack:///./src/config.js","webpack:///./src/index.js","webpack:///./src/json/index.js","webpack:///./src/parse/index.js","webpack:///./src/tags/clip.js","webpack:///./src/tags/data.js","webpack:///./src/tags/each.js","webpack:///./src/tags/if.js","webpack:///./src/tags/index.js","webpack:///./src/tags/insert.js","webpack:///./src/tags/jsonInsert.js","webpack:///./src/tags/wrap.js","webpack:///./src/util/file.js","webpack:///./src/util/parsing.js","webpack:///./src/util/platform.js"],"names":["hasTagAttribute","getTagAttribute","setTagAttribute","changeTagAttributeName","removeTagAttribute","addTagAttribute","attr","content","indexOf","fndx","lndx","console","warn","slice","length","value","left","right","newAttr","middle","error","wrapFiles","insertFiles","pageFiles","options","devOptions","insertPattern","filePathAttribute","jsonPathAttribute","configureFiles","file","name","path","push","setOptions","ops","dev","module","exports","initialize","log","hashFile","f","buildFileResult","map","AST","jsonInput","replace","processed","callback","toSafeJsonString","processRawJson","appendJsonParentPath","addRawJsonWhereJsonPath","jsonObj","JSON","stringify","jsonString","jsonData","eval","e","jsonParentPath","fragment","ndx","arr","join","rawJson","data","bluntDataTagsInEaches","unbluntDataTagsInEaches","eachLevel","defaultNode","type","parent","children","nestedNodes","attributes","innerScope","jsonPath","json","buildAST","topNode","processNode","node","contentArr","filter","c","parseNodesToAst","resolveNode","forEach","loadNodeAttributes","processor","nodeProcessors","closeTag","nodes","shift","findNodeType","attrs","nodeAttributes","textContent","insert","getDataFromJsonPath","filename","wrap","defaultVal","default","jsonInsert","each","if","result","split","reduce","acc","cur","Array","isArray","processClip","tmp","splice","processDataTag","tag","jsonContext","defaultValue","processEach","endNdx","startNdx","count","parseInt","middleMaster","i","processIf","processContent","splitArr","itterCount","contentBeforeProcessing","processSplitArray","printIterations","limitIterations","printResult","tempDirectory","pathStack","substr","hasPath","hasAbsPath","curFile","tmpPath","fileInfo","flattenInsertedContent","openNdx","closeNdx","flattenEach","processInsert","processJsonInsert","processWraps","fpath","pathPattern","absPathPattern","pattern","File","buildPathFromRelativePath","updateRelativePaths","contents","toString","trim","fixFilePathForOS","cdir","fdir","dir","dirChar","pop","printPaths","getIndexOfClosingBrace","splitContent","findIndexOfClosingTag","startPattern","endPattern","tagDepth","tmpContent","nextCloseNdx","nextOpenNdx","trace","tmpOpen","tmpClosed","partial","RAW_JSON_NDX","JSON_PATH_NDX","FILE_PATH_NDX","CONTENT_NDX","openTag","openCount","isWin","test","process","platform"],"mappings":"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","file":"htmlincluder.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","// does a tag have an attribute? (attributeName=\"value\")\nexport function hasTagAttribute(attr, content) {\n  // strip out inner tags\n  // check attribute existence\n  return content.indexOf(attr + '=\"') > -1;\n}\n\n// get the value of an attribute (attributeName=\"value\")\nexport function getTagAttribute(attr, content) {\n  var fndx = -1,\n      lndx = -1;\n\n  fndx = content.indexOf(attr + '=\"');\n  if(fndx === -1) {\n    console.warn(\"Warning: no tag of name `\" + attr + \"` found in the following content: `\" + content + \"`\")\n    return \"\";\n  }\n\n  content = content.slice(fndx + attr.length + 2);\n  lndx = content.indexOf('\"');\n  content = content.slice(0, lndx);\n  return content;\n}\n\n// set the value of an attribute (attributeName=\"value\")\nexport function setTagAttribute(attr, content, value) {\n  var fndx = -1,\n      lndx = -1,\n      left = \"\",\n      right = \"\";\n\n  fndx = content.indexOf(attr + '=\"');\n  left = content.slice(0, fndx + attr.length + 2);\n  content = content.slice(fndx + attr.length + 2);\n  lndx = content.indexOf('\"');\n  right = content.slice(lndx);\n  content = left + value + right;\n  return content;\n}\n\n// rename one attribute name to another (attributeName=\"value\")\nexport function changeTagAttributeName(attr, content, newAttr) {\n  var fndx = -1,\n      lndx = -1,\n      left = \"\",\n      right = \"\";\n\n  fndx = content.indexOf(attr + '=\"');\n  left = content.slice(0, fndx);\n  right = content.slice(fndx + attr.length);\n  return left + newAttr + right;\n}\n\n// removes an attribute from a tag along with its value (attributeName=\"value\")\nexport function removeTagAttribute(attr, content) {\n  var fndx = -1,\n      lndx = -1,\n      left = \"\",\n      right = \"\",\n      middle = content;\n\n  if(hasTagAttribute(attr, middle)) {\n    fndx = middle.indexOf(attr + '=\"');\n    left = middle.slice(0, fndx);\n    right = middle.slice(fndx + attr.length + 2);\n    // really naive for now - just look for another '\"'\n    lndx = right.indexOf('\"');\n    if(lndx === -1) {\n      console.error('ERROR: No close `\"` in tag ' + content)\n      return content;\n    }\n    else {\n      right = right.slice(lndx + 1);\n      middle = \"\";\n    }\n  }\n  return left + middle + right;\n}\n\n// adds an attribute from a tag along with a value (attributeName=\"value\")\nexport function addTagAttribute(attr, content, value) {\n  var fndx = -1,\n      lndx = -1,\n      left = \"\",\n      right = \"\",\n      middle = content;\n\n  lndx = middle.indexOf(\" \");\n  if(lndx > -1) {\n    left = middle.slice(0, lndx);\n    right = middle.slice(lndx);\n    middle = ` ${attr}=\"${value}\"`;\n  }\n\n  return left + middle + right;\n}\n","export const wrapFiles = {};\nexport const insertFiles = {};\nexport const pageFiles = [];\n\nexport let options = {};\nexport let devOptions = {};\nexport let insertPattern;\nexport let filePathAttribute;\nexport let jsonPathAttribute;\n\nexport const configureFiles = file => {\n  if(file.name[0] === '_')\n    wrapFiles[file.path] = file;\n  else if(file.name[0] === '-')\n    insertFiles[file.path] = file;\n  else\n    pageFiles.push(file);\n}\n\n// @options = (optional) options for configuring htmlIncluder\n// options.jsonInput         = A json object used to populate data in files\n// options.insertPattern     = The test looked for in order to insert files\n//          (this is so ssi includes can be used instead)\n// options.filePathAttribute = the name used for the file pathing for #insert\n//          and #wrap (default= 'path')\n// options.jsonPathAttribute = the name used for the file pathing for #insert\n//          , #wrap, #data, #jsonInsert (default= 'jsonPath')\n//\n//\n// options.dev.limitIterations = the number of times processFileWithJsonInput will loop\n// options.dev.printIterations = console log each processFileWithJsonInput loop\n// options.dev.printResult = console logs the final output\n// options.dev.printPaths = console logs the output of buildPathFromRelativePath\nexport const setOptions = ops => {\n  devOptions = ops.dev || {};\n  options = ops;\n\n  //set text value for insert tags, or default\n  insertPattern = (options.insertPattern)\n    ? '<!--#' + options.insertPattern\n    : '<!--#insert';\n\n  filePathAttribute = (options.filePathAttribute)\n    ? options.filePathAttribute\n    : 'path';\n\n  jsonPathAttribute = (options.jsonPathAttribute)\n    ? options.jsonPathAttribute\n    : 'jsonPath';\n}\n","import processClip from './tags/clip';\nimport processContent from './tags';\nimport { configureFiles, setOptions, pageFiles, options } from './config';\nimport { File } from './util/file';\nimport { buildAST } from './parse';\n\nmodule.exports = {\n  initialize : options => (console.log('options:', options), setOptions(options)),\n  // puts files into hash maps\n  hashFile : file => {\n    const f = File(file);\n\n    // removing clip right away does no damage and speeds up later processing\n    processClip(f);\n\n    configureFiles(f);\n  },\n  // builds string\n  buildFileResult : callback => pageFiles.map(file => {\n    const AST = buildAST(file, options.jsonInput || {});\n\n    file.content = processContent(file.content, file.path, options.jsonInput || {});\n\n    // When an unknown tag is found it is changed to <!--!unknwn-tag# so that it doesn't\n    // continually get found. This will undo those changes\n    file.content = file.content.replace(/<!--!unknwn-tag#/g, '<!--#');\n    file.processed = true;\n\n    if(callback)\n      callback(file);\n\n    return file;\n  }),\n};\n","import { splitContent, getDataFromJsonPath } from '../util/parsing';\nimport { hasTagAttribute, addTagAttribute } from '../attributes';\nimport { jsonPathAttribute } from '../config';\n\n// given a jsonObj, we can convert it to a string for our purposes\nexport function toSafeJsonString(jsonObj) {\n  return JSON.stringify(jsonObj).replace(/\\'/g, \"\\\\'\").replace(/\"/g, \"'\")\n}\n\n// Handles the string value inside of rawJson=\"\" attributes\nexport function processRawJson(jsonString) {\n  var jsonData = {};\n\n  if(typeof(jsonString) === 'object')\n    jsonString = toSafeJsonString(jsonString);\n\n  try {\n    eval('jsonData = ' + jsonString);\n  }\n  catch(e) {\n    console.error('ERROR: Poorly formatted rawJson string: ' + jsonString + '\\n\\n This must be valid JavaScript.');\n  }\n\n  return jsonData;\n}\n\n// add json paths together\nexport function appendJsonParentPath(content, jsonParentPath) {\n  var fndx = -1,\n      lndx = -1,\n      left = \"\",\n      right = \"\";\n\n  // do nothing if there is no jsonParentPath\n  if(jsonParentPath === '' || jsonParentPath === 'this')\n    return content;\n\n  content = splitContent(content, '<!--#data'); // '' => ['']\n\n  // if we have an array larger than 1, then there is at least 1 insert to be made\n  if(content.length > 1) {\n\n    // process files\n    content = content.map(function(fragment, ndx, arr) {\n        if(fragment.indexOf('<!--#data') === 0) {\n          fndx = fragment.indexOf(`${jsonPathAttribute}=\"`)\n          if(fndx > -1) {\n            left = fragment.slice(0, fndx + 10);\n            fragment = left + jsonParentPath + '.' + fragment.slice(fndx + 10);\n          }\n          else {\n            console.error(\"ERROR: '<!--#data' tag with no 'jsonPath'\");\n          }\n        }\n        return fragment;\n      })\n\n  }\n  // re-join content into a string\n  content = content.join('') // [''] => ''\n  return content;\n}\n\n// splits up content into tags and puts rawJson in (if there isn't already a rawJson)\nexport function addRawJsonWhereJsonPath(content, rawJson, jsonParentPath) {\n  var fndx = -1,\n      lndx = -1,\n      left = \"\",\n      right = \"\";\n\n  // if we have a parent path, then we need to grab a subset of the rawJson\n  if(jsonParentPath && rawJson) {\n    let data = processRawJson(rawJson);\n    rawJson = getDataFromJsonPath(jsonParentPath, data);\n  }\n\n  content = bluntDataTagsInEaches(content);\n\n  content = splitContent(content); // '' => ['']\n\n  // if we have an array larger than 1, then there is at least 1 insert to be made\n  if(content.length > 1) {\n\n    // process files\n    content = content.map(function(fragment, ndx, arr) {\n        if(fragment.indexOf('<!--#') === 0 &&\n           hasTagAttribute(jsonPathAttribute, fragment) &&\n           !hasTagAttribute(\"rawJson\", fragment)\n          ) {\n          fragment = addTagAttribute(\"rawJson\", fragment, rawJson);\n        }\n        return fragment;\n      })\n\n  }\n  // re-join content into a string\n  content = content.join(''); // [''] => ''\n\n  content = unbluntDataTagsInEaches(content);\n  return content;\n}\n\nfunction bluntDataTagsInEaches(content) {\n  let arr = splitContent(content);\n  let eachLevel = 0;\n\n  content = arr.map((fragment, ndx, arr) => {\n    if(fragment.indexOf('<!--#each') === 0) eachLevel++;\n    if(fragment.indexOf('<!--#endeach') === 0) eachLevel--;\n    if(fragment.indexOf('<!--#data') === 0 && eachLevel > 0)\n      fragment = fragment.replace('<!--#data', '<!--@#data');\n    return fragment;\n  }).join('');\n\n  if(eachLevel > 0)\n    console.error('Error: Mismatched number of each and endeach tags');\n\n  return content;\n}\n\nfunction unbluntDataTagsInEaches(content) {\n  content = content.replace(/<!--@#data/g, '<!--#data');\n  return content;\n}\n","import { splitContent } from '../util/parsing';\nimport { hasTagAttribute, getTagAttribute } from '../attributes';\nimport { processRawJson } from '../json';\nimport { buildPathFromRelativePath } from '../util/file';\nimport {\n  jsonPathAttribute,\n  filePathAttribute,\n  insertFiles,\n  wrapFiles\n} from '../config';\n\n/*\n\n  string           - unparsed file\n  object           - node\n  array of objects - node list\n\n  1) convert a file (string) to a node\n  2) process the node\n    1) parse contents of node into a list of content and tags - both strings\n    2) resolve nested tags\n      - treat the string contents of a tag as a file\n    3) resolve tags to string\n      - each tag has its own process of being resolved\n  3) build string result by combining all child tags contents\n\n */\n\n// shape of our AST nodes\nconst defaultNode = {\n  type       : '',\n  file       : {},\n  content    : '',\n  parent     : {},\n  children   : [], // list of sequential nodes wrapped in tag (or at topNode)\n  processed  : false,\n  nestedNodes : [], // nested tags - these need to be resolved before this tag is resolved\n  attributes : {}, // attributes on tag\n  innerScope : {},\n  jsonPath   : '',\n  json       : {}, // json values used for this tag\n};\n\n// entry point for processing files\nexport const buildAST = (file, json) => {\n\n  // convert string into object\n  const topNode = {\n    ...defaultNode,\n    type    : 'topNode',\n    file,\n    content : file.content,\n  };\n\n  // process children of the node\n  processNode(topNode, json);\n\n  console.log(topNode.content);\n\n  return topNode;\n}\n\n//\nconst processNode = (node, json) => {\n  // the contents of a node may contain more nested nodes\n  // break these up into an array of mixed textContent nodes and tags\n  const contentArr = splitContent(node.content).filter(c => c !== '');\n\n  // if the first item in the split content is the same as the content, there were no tags\n  if(contentArr[0] === node.content) return;\n\n  // convert array of strings to nodes\n  node.nestedNodes = parseNodesToAst(node, contentArr, json);\n\n  resolveNode(node, json);\n}\n\n//\nconst resolveNode = (node, json) => {\n  if(node.type === 'textContent') return;\n\n  if(node.nestedNodes.length > 0) {\n    // resolve nested tags\n    node.nestedNodes.forEach(node => resolveNode(node, json));\n    node.content = node.nestedNodes.map(c => c.content).join('');\n  }\n\n  // load and resolve attribute values\n  loadNodeAttributes(node);\n\n  // process node so that content is resolved\n  const processor = nodeProcessors[node.type] || (() =>{});\n  processor(node, json);\n\n  if(node.children.length > 0)\n    node.content = node.children.map(c => c.content).join('');\n\n  node.processed = true;\n}\n\n//\nconst parseNodesToAst = (parent, contentArr, json, closeTag) => {\n  const nodes = [];\n\n  while(contentArr.length > 0) {\n    const content = contentArr.shift();\n\n    // if we find the close tag, then close this\n    if(closeTag && content.indexOf(closeTag) === 0) {\n      return nodes;\n    }\n\n    // lookup type of the tag\n    const type = findNodeType(content);\n\n    const node = {\n      ...defaultNode,\n      type,\n      parent,\n      file    : parent.file,\n      content,\n    };\n\n    // if this is a text node, we're set\n    if(type === 'textContent') {\n      node.processed = true;\n      nodes.push(node);\n      continue;\n    }\n\n    // remove leading character ('<') so the inner contents can be parsed properly\n    node.content = content.slice(1);\n\n    // the contents inside a node can be treated like new little documents\n\n    // handle all nested node\n    // skip if we are building up children\n    if(!closeTag)\n      processNode(node);\n\n    // if this is a node that has children build them up, removing them\n    // from the split up array\n    node.children = (\n        type === 'wrap' ? parseNodesToAst(node, contentArr, json, '<!--#endwrap')\n      : type === 'each' ? parseNodesToAst(node, contentArr, json, '<!--#endeach')\n      : type === 'if'   ? parseNodesToAst(node, contentArr, json, '<!--#endif')\n      : []\n    );\n\n    nodes.push(node);\n  }\n\n  return nodes.length > 1 ? nodes : [];\n}\n\n// check for tag and return node type\nconst findNodeType = content => (\n  content.indexOf('<!--#insert')     === 0 ? 'insert'\n: content.indexOf('<!--#data')       === 0 ? 'data'\n: content.indexOf('<!--#jsonInsert') === 0 ? 'jsonInsert'\n: content.indexOf('<!--#wrap')       === 0 ? 'wrap'\n: content.indexOf('<!--#middle')     === 0 ? 'middle'\n: content.indexOf('<!--#each')       === 0 ? 'each'\n: content.indexOf('<!--#if')         === 0 ? 'if'\n: 'textContent'\n)\n\n// loads values for tags into node object\nconst loadNodeAttributes = node => {\n  const attrs = nodeAttributes[node.type] || [];\n  attrs.forEach(attr => {\n    console.log(attr, node.content)\n    if(hasTagAttribute(attr, node.content)) {\n      const value = getTagAttribute(attr, node.content);\n      node.attributes[attr] = attr === 'rawJson' ? processRawJson(value) : value;\n    }\n  })\n}\n\n// the functions that processes each node\n// these assume that they have all their nested nodes resolved and attributes loaded\nconst nodeProcessors = {\n  topNode : (node, json) => {\n    node.content = node.nestedNodes.map(c => c.content).join('');\n    node.processed = true;\n  },\n  textContent : (node, json) => node.processed = true,\n  insert : (node, json) => {\n    const { file } = node;\n    const { path, jsonPath, rawJson } = node.attributes;\n    if(!path) {\n      console.warn(`WARNING while processing file '${file.path}': insert tag with no path attribute`);\n      node.content = '';\n      return;\n    }\n    // set scope for inserted file\n    node.innerScope = (\n        jsonPath ? getDataFromJsonPath(jsonPath, json)\n      : rawJson  ? rawJson\n      : {}\n    );\n\n    // get filename for inserted file\n    const filename = buildPathFromRelativePath(file.path, path);\n\n    // see if file we are loading exists\n    if(!insertFiles[filename]) {\n      console.warn(`WARNING while processing file '${file.path}': insert file '${filename}' does not exist`);\n      node.content = '';\n      return;\n    }\n\n    // load contents from file\n    node.content = insertFiles[filename].content;\n\n    // process contents to get children\n    processNode(node, json);\n  },\n  wrap : (node, json) => {\n    const { file } = node;\n    const { path, jsonPath, rawJson } = node.attributes;\n    if(!path) {\n      console.warn(`WARNING while processing file '${file.path}': wrap tag with no path attribute`);\n      node.content = '';\n      return;\n    }\n    // set scope for inserted file\n    node.innerScope = (\n        jsonPath ? getDataFromJsonPath(jsonPath, json)\n      : rawJson  ? rawJson\n      : {}\n    );\n\n    // get filename for inserted file\n    const filename = buildPathFromRelativePath(file.path, path);\n\n    // see if file we are loading exists\n    if(!wrapFiles[filename]) {\n      console.warn(`WARNING while processing file '${file.path}': wrap file '${filename}' does not exist`);\n      node.content = '';\n      return;\n    }\n\n    // load contents from file\n    node.content = wrapFiles[filename].content;\n    console.log(node.children)\n\n    // process contents to get children\n    processNode(node);\n  },\n  data : (node, json) => {\n    const { jsonPath, rawJson } = node.attributes;\n    const defaultVal = node.attributes.default;\n    if(!rawJson || !jsonPath) {\n      node.content = '';\n      return;\n    }\n    const data = getDataFromJsonPath(jsonPath, rawJson);\n    node.content = data || defaultVal || '';\n  },\n  jsonInsert : (node, json) => {\n    const { jsonPath } = node.attributes;\n    const defaultVal = node.attributes.default;\n    if(!jsonPath) {\n      node.content = '';\n      return;\n    }\n    console.log('jsonInsert: ', json, jsonPath);\n    const data = getDataFromJsonPath(jsonPath, json);\n    node.content = data || defaultVal || '';\n  },\n  middle : (node, json) => {\n\n  },\n  each : (node, json) => {\n\n  },\n  if : (node, json) => {\n\n  },\n}\n\n// the legal attributes for each element\nconst nodeAttributes = {\n  insert      : [ 'path', 'jsonPath', 'rawJson' ],\n  data        : [ 'jsonPath', 'rawJson', 'default' ],\n  jsonInsert  : [ 'jsonPath', 'default' ],\n  wrap        : [ 'path', 'jsonPath', 'rawJson' ],\n  middle      : [  ],\n  each        : [ 'count', 'jsonPath', 'rawJson' ],\n  if          : [ 'jsonPath', 'rawJson' ],\n  textContent : [  ],\n}\n\n// given a jsonObject and a path, return the data pointed at\nconst getDataFromJsonPath = (jsonPath, json) => {\n  if(jsonPath === 'this') return json;\n\n  let result = jsonPath.split('.').reduce((acc, cur) => acc ? acc[cur] : '', json)\n\n  if(!Array.isArray(result) && typeof(result) === 'object')\n    result = toSafeJsonString(result);\n\n  return result;\n}\n\n//\nconst toSafeJsonString = jsonObj =>\n  JSON.stringify(jsonObj).replace(/\\'/g, \"\\\\'\").replace(/\"/g, \"'\")\n\n","// <!--#clipbefore -->\n// <!--#clipafter -->\n// <!--#clipbetween -->\n// <!--#endclipbetween -->\n// This runs first, since all of the clipped areas will completely be removed\nexport default function processClip(file) {\n  var tmp;\n\n  if(file.content.indexOf('<!--#clipbefore') > -1) {\n\n    file.content = file.content\n            .split(/<!--#clipbefore\\s*-->/)\n            .splice(1)[0]\n            .split('<!--#clipafter')\n            .splice(0,1)[0];\n  }\n\n  if(file.content.indexOf('<!--#clipbetween') > -1) {\n\n    tmp = file.content\n        .split(/<!--#clipbetween\\s*-->/);\n\n    file.content = tmp[0] + tmp[1].split(/<!--#endclipbetween\\s*-->/)[1];\n  }\n}\n","import { hasTagAttribute, getTagAttribute } from '../attributes';\nimport { processRawJson } from '../json';\nimport { getDataFromJsonPath } from '../util/parsing';\nimport { jsonPathAttribute } from '../config';\n\n// <!--#data jsonPath=\"\" default=\"\" -->\nexport default function processDataTag(tag, jsonContext) {\n  let jsonPath = \"\",\n      rawJson = \"\",\n      defaultValue = \"\",\n      jsonData = \"\";\n\n  jsonPath = getTagAttribute(jsonPathAttribute, tag);\n\n  if(hasTagAttribute(\"default\", tag))\n    defaultValue = getTagAttribute('default', tag);\n\n  if(hasTagAttribute('rawJson', tag)) {\n    rawJson = getTagAttribute('rawJson', tag);\n    rawJson = processRawJson(rawJson);\n  }\n  else if(jsonContext)\n    rawJson = processRawJson(jsonContext);\n\n  jsonData = getDataFromJsonPath(jsonPath, rawJson);\n  let result = jsonData || defaultValue;\n\n  return (typeof(result) === 'string')\n    ?  result\n    : JSON.stringify(result).replace(/\"/g, \"'\");\n}\n","import { hasTagAttribute, getTagAttribute, addTagAttribute } from '../attributes';\nimport { processRawJson, toSafeJsonString } from '../json';\nimport { getDataFromJsonPath, findIndexOfClosingTag } from '../util/parsing';\nimport { jsonPathAttribute } from '../config';\n\n// <!--#each count=\"\" jsonPath=\"\" rawJson=\"\" -->\n// <!--#endeach -->\nexport default function processEach(file, ndx, arr, jsonContext) {\n  let endNdx = -1,\n      startNdx = ndx + 1,\n      content = arr[ndx],\n      jsonPath = '',\n      rawJson = '',\n      jsonData = '',\n      count = false;\n\n  // find the closing tag for this each\n  endNdx = findIndexOfClosingTag('<!--#each', '<!--#endeach', ndx, arr);\n\n  // If we have no closing tag, then this is an error\n  if(endNdx === -1) {\n    console.error(\"ERROR: in file \" + file.path + \": <!--#each --> with no <!--#endeach -->\");\n    return;\n  }\n\n  // Maybe don't allow empty each tags\n  if(endNdx === (ndx - 1))\n    console.warn(\"WARNING: in file \" + file.path + \": <!--#each --> with no content\");\n\n  // look up the jsonPath used for this\n  if(hasTagAttribute(jsonPathAttribute, content))\n    jsonPath = getTagAttribute(jsonPathAttribute, content);\n\n  // see if there is rawJson on this, or get the jsonContext intead\n  if(hasTagAttribute('rawJson', content)) {\n    rawJson = getTagAttribute('rawJson', content);\n    rawJson = processRawJson(rawJson);\n  }\n  else if(jsonContext)\n    rawJson = processRawJson(jsonContext);\n\n  // if we have a path to look up data with, then use it\n  if(jsonPath)\n    jsonData = getDataFromJsonPath(jsonPath, rawJson);\n\n  // see if there is a hard coded loop count\n  if(hasTagAttribute('count', content))\n    count = parseInt(getTagAttribute('count', content), 10);\n\n  // Check if the jsonData is an array, if it is we should use it for the count\n  if(Array.isArray(jsonData)) {\n    // if we don't have a count, set it to length,\n    // else we will constrain how many items we will loop on\n    if(!count)\n      count = jsonData.length;\n    else if(count > jsonData.length) {\n      console.warn(\"WARNING: in file \" + file.path + \": <!--#each --> with count attribute higher than array input's length. Changing to length of array\");\n      count = jsonData.length;\n    }\n  }\n\n  // If there is no count and no jsonPath, then there is probably something forgotten\n  if(!count && !jsonPath) {\n    console.error(\"ERROR: in file \" + file.path + \": <!--#each --> with no count attribute, and no array as json object.\");\n    return;\n  }\n\n  ///\n  /// At this point we have the start and end indexes, and the data we are using\n  /// to render the content between the statements.\n  ///\n  /// The strategy used is to get this content, and then to duplicate it as many\n  /// times as the count. The content is all now within an array that replaces\n  /// everything from the current index to the index of the ending each tag.\n  ///\n\n  // clear end tag\n  arr[ndx] = '';\n  arr[endNdx] = '';\n\n  let middleMaster = arr.splice(startNdx, endNdx - startNdx).join('');\n\n  content = [];\n\n  // create all the duplicates of the data with the proper inserted data\n  for(let i = 0; i < count; i++)\n    if(jsonData)\n      content.push([jsonData[i], middleMaster ])\n    else\n      content.push(middleMaster);\n\n  // cut out original each, and replace with array\n  arr.splice(ndx, 2, content);\n}\n","import { hasTagAttribute, getTagAttribute } from '../attributes';\nimport { processRawJson } from '../json';\nimport { getDataFromJsonPath, findIndexOfClosingTag } from '../util/parsing';\nimport { jsonPathAttribute } from '../config';\n\n// <!--#if jsonPath=\"\" rawJson=\"\" -->\n// <!--#endif -->\nexport default function processIf(file, ndx, arr, jsonContext) {\n  let endNdx = -1,\n      content = arr[ndx],\n      rawJson = \"\",\n      jsonPath = \"\",\n      jsonData;\n\n  if(hasTagAttribute(jsonPathAttribute, content))\n    jsonPath = getTagAttribute(jsonPathAttribute, content);\n\n  if(hasTagAttribute('rawJson', content)) {\n    rawJson = getTagAttribute('rawJson', content);\n    rawJson = processRawJson(rawJson);\n  }\n  else if(jsonContext)\n    rawJson = processRawJson(jsonContext);\n\n  jsonData = getDataFromJsonPath(jsonPath, rawJson);\n\n  // clear if statement\n  arr[ndx] = \"\";\n\n  endNdx = findIndexOfClosingTag('<!--#if', '<!--#endif', ndx, arr);\n\n  // If we have no closing tag, then this is an error\n  if(endNdx === -1) {\n    console.error(\"ERROR: in file \" + file.path + \": <!--#if . . . --> with no <!--#endif . . . -->\");\n    return;\n  }\n\n  // clear endif statement\n  arr[endNdx] = \"\";\n\n  // If there is no jsonPath we have no way to check the data ...\n  if(!jsonPath) {\n    console.error(\"ERROR: in file \" + file.path + \": <!--#if --> with no jsonPath\");\n    return;\n  }\n\n  // if undefined jsonData or false, then we eliminate the section\n  if(typeof(jsonData) === 'undefined' || jsonData == false)\n    arr.splice(ndx, endNdx - ndx);\n}\n","import { splitContent } from '../util/parsing';\nimport { buildPathFromRelativePath, updateRelativePaths } from '../util/file';\nimport { hasTagAttribute, getTagAttribute } from '../attributes';\nimport { addRawJsonWhereJsonPath, appendJsonParentPath } from '../json';\n\n// all the different tags we are going to process\nimport processDataTag     from './data';\nimport processEach        from './each';\nimport processIf          from './if';\nimport processInsert      from './insert';\nimport processJsonInsert  from './jsonInsert';\nimport processWraps       from './wrap';\n\nimport {\n  options,\n  devOptions,\n  insertPattern,\n  filePathAttribute,\n} from '../config';\n\n/**\n * Recursive function that does the major systematic work of htmlincluder\n *\n * 1) split content into an array of tags and non-tags\n * 2) if there are any tags (array.length > 1) loop until the parsing is finished\n *\n * @param  {String} content The text that we are processing the tags of\n * @param  {String} path    The current file path\n * @return {String}         The content, now parsed and with all tags replaces\n */\nexport default function processContent(content, path, jsonContext) {\n  let splitArr = [];\n  let itterCount = 0;\n\n  // create a tmp version of content to see if we actually do any work on it\n  let contentBeforeProcessing = content;\n\n  // prime loop: split content into all insertion points\n  splitArr = splitContent(content); // '' => ['']\n\n  // if we have an array larger than 1, then there is at least 1 insert to be made\n  while(splitArr.length > 1) {\n\n    splitArr = processSplitArray(splitArr, path, jsonContext);\n\n    // At this point we should have a mix of strings and arrays\n    // We need to loop through again and process each of the arrays\n\n    // re-join content into a string, and repeat\n    content = splitArr.join(''); // [''] => ''\n\n    // We split the string, so there should have been work. Was there?\n    if(content === contentBeforeProcessing) {\n      console.error('Content was split, but no change was made in it: ' + content);\n      console.error('Something in your tagging may be making it impossible to process correctly')\n      console.error('Returning the content without further processing')\n      return content;\n    }\n\n    // split file into all insertion points\n    splitArr = splitContent(content); // '' => ['']\n\n    // debug features\n    if(devOptions.printIterations)\n      console.log(content);\n\n    if(devOptions.limitIterations) {\n      itterCount++;\n      if(itterCount >= devOptions.limitIterations)\n        break;\n    }\n  }\n\n  if(devOptions.printResult)\n    console.log(content);\n\n  return content;\n}\n\n/**\n * Loops through split content. For each tag, it makes a call back up to\n * processContent in order to take care of any inner tags.\n *\n * Once there are no more inner tags, we look at the tag, and depending on its\n * kind, we run a different tag processor on it.\n *\n * @param  {Array}  splitArr    The array of split up tags\n * @param  {String} path        The file path we are currently using for relative paths\n * @param  {Object} jsonContext The json data consumable by tags in this context\n * @return {Array}              The array, having made one pass to process it\n */\nfunction processSplitArray(splitArr, path, jsonContext) {\n  let tempDirectory;\n  let pathStack = path;\n  // iterate through content\n  for(let i = 0; i < splitArr.length; i++) {\n    let fragment = splitArr[i];\n\n    if(fragment.indexOf('<!--#') === 0) {\n      // process any tags inside of this tag\n      fragment = '<' + processContent(fragment.substr(0, fragment.length - 1).substr(1), path, jsonContext) + '>';\n\n      //\n      // At this point we can assume that the tag we are working with has no\n      // embedded tags.\n      //\n\n      // See if this has a file path, or absolute file path. If we don't have\n      // an absolute path, then we need to build one.\n      let hasPath = hasTagAttribute(filePathAttribute, fragment);\n      let hasAbsPath = hasTagAttribute(\"absPath\", fragment);\n\n      // get or build paths\n      if(hasPath)\n        tempDirectory = buildPathFromRelativePath(pathStack, getTagAttribute(filePathAttribute, fragment));\n      else if(hasAbsPath) {\n        tempDirectory = getTagAttribute(\"absPath\", fragment);\n        pathStack = tempDirectory;\n      }\n\n      let curFile = {\n        content: fragment,\n        path: pathStack,\n        tmpPath: tempDirectory,\n      };\n\n      // handle loading each particular kind of tag\n      if(fragment.indexOf('<!--#data') === 0) {\n        splitArr[i] = processDataTag(fragment, jsonContext);\n      }\n      else if(fragment.indexOf('<!--#jsonInsert') === 0) {\n        splitArr[i] = processJsonInsert(fragment);\n      }\n      else if(fragment.indexOf(insertPattern) === 0) {\n        const fileInfo = processInsert(curFile, jsonContext);\n        splitArr[i] = flattenInsertedContent(fileInfo);\n      }\n      else if(fragment.indexOf('<!--#wrap') === 0) {\n        const [openNdx, closeNdx] = processWraps(curFile, i, splitArr, jsonContext);\n        splitArr[openNdx] = flattenInsertedContent(splitArr[openNdx]);\n        splitArr[closeNdx] = flattenInsertedContent(splitArr[closeNdx]);\n      }\n      else if(fragment.indexOf('<!--#if') === 0) {\n        processIf(curFile, i, splitArr, jsonContext)\n      }\n      else if(fragment.indexOf('<!--#each') === 0) {\n        processEach(curFile, i, splitArr, jsonContext);\n        splitArr[i] = flattenEach(splitArr[i], pathStack);\n      }\n      else {\n        console.error('An unidentified tag is being used: ' + fragment);\n        splitArr[i] = fragment.replace('<!--#', '<!--!unknwn-tag#');\n      }\n\n      pathStack = path;\n    }\n  }\n\n  return splitArr;\n}\n\n/**\n * The result of each tags produce an array that lumps together the expanded\n * content between the two tags.\n *\n * It does this by running through the array, and if data is needed, it runs\n * it through processContent. Otherwise it simply adds it to a string.\n *\n * @param  {Array}  fragment The collection of content between the each tags\n * @param  {String} path     The current file path\n * @return {String}          Processed content between each\n */\nfunction flattenEach(fragment, path) {\n\n  if(!Array.isArray(fragment))\n    return fragment;\n\n  let result = '';\n  for(let i = 0; i < fragment.length; i++) {\n    if(Array.isArray(fragment[i])) {\n      const [ data, content ] = fragment[i];\n      result += processContent(content, path, data);\n    }\n    else\n      result += fragment[i];\n  }\n\n  return result;\n}\n\n/**\n * When an #insert or #wrap/#endwrap parse runs it inserts an array into its\n * spot. Then it will flatten this out\n * @param  {[type]} fileInfo [description]\n * @return {[type]}          [description]\n */\nfunction flattenInsertedContent(fileInfo) {\n  const [\n    rawJson,\n    jsonParentPath,\n    tmpPath,\n    content,\n  ] = fileInfo;\n\n  return processContent(content, tmpPath, rawJson);\n}\n","import { hasTagAttribute, getTagAttribute } from '../attributes';\nimport { addRawJsonWhereJsonPath, appendJsonParentPath } from '../json';\nimport { buildPathFromRelativePath, updateRelativePaths } from '../util/file';\nimport { jsonPathAttribute, filePathAttribute, insertFiles } from '../config';\n\n// <!--#insert path=\"\" -->\nexport default function processInsert(file, jsonContext) {\n  let filename = \"\";\n  let content  = file.content;\n\n  let rawJson = (hasTagAttribute('rawJson', content))\n      ? getTagAttribute('rawJson', content)\n      : \"\";\n\n  let jsonParentPath = (hasTagAttribute(jsonPathAttribute, content))\n    ? getTagAttribute(jsonPathAttribute, content)\n    : \"\";\n\n  if(hasTagAttribute(filePathAttribute, content)) {\n    filename = getTagAttribute(filePathAttribute, content);\n    filename = buildPathFromRelativePath(file.path, filename);\n  }\n  else if(hasTagAttribute('absPath', content))\n    filename = getTagAttribute(\"absPath\", content)\n\n  if(insertFiles[filename])\n    content = insertFiles[filename].content;\n  else {\n    console.error(\"ERROR: in file '\" + file.path + \"': insert file `\" + filename + \"` does not exist\");\n    return \"\";\n  }\n\n  return [rawJson, jsonParentPath, file.tmpPath, content];\n}\n","import { hasTagAttribute, getTagAttribute } from '../attributes';\nimport { getDataFromJsonPath } from '../util/parsing';\nimport { jsonPathAttribute } from '../config';\n\n// <!--#jsonInsert jsonPath=\"\" default=\"\" -->\nexport default function processJsonInsert(tag) {\n  let defaultValue = (hasTagAttribute(\"default\", tag))\n    ? getTagAttribute('default', tag)\n    : \"\";\n\n  let jsonPath = getTagAttribute(jsonPathAttribute, tag);\n  let jsonData = getDataFromJsonPath(jsonPath);\n\n  if(jsonData || defaultValue)\n    return jsonData || defaultValue;\n  else {\n    console.warn(\"ERROR: jsonPath `\" + jsonPath + \"` is undefined, and no default value\");\n    return \"\";\n  }\n}\n","import { hasTagAttribute, getTagAttribute } from '../attributes';\nimport { jsonPathAttribute, filePathAttribute, wrapFiles, pathPattern } from '../config';\nimport { addRawJsonWhereJsonPath, appendJsonParentPath } from '../json';\nimport { buildPathFromRelativePath, updateRelativePaths } from '../util/file';\nimport { findIndexOfClosingTag } from '../util/parsing';\n\n// <!--#wrap path=\"\" jsonPath=\"\" rawJson=\"\" -->\n// <!--#middle -->\n// <!--#endwrap -->\nexport default function processWraps(file, ndx, arr, jsonContext) {\n  let endNdx = -1,\n      fpath = \"\",\n      content = arr[ndx],\n      filename = \"\",\n      rawJson = \"\",\n      jsonParentPath = \"\",\n      pathPattern = 'path=\"',\n      absPathPattern = 'absPath=\"',\n      pattern = (content.indexOf(pathPattern) > -1)\n        ? pathPattern\n        : absPathPattern;\n\n  // see if we are loading a json path\n  if(hasTagAttribute(jsonPathAttribute, content))\n    jsonParentPath = getTagAttribute(jsonPathAttribute, content);\n\n  // see if we have raw json to load from\n  if(hasTagAttribute('rawJson', content))\n    rawJson = getTagAttribute('rawJson', content);\n\n  // get filepath (either relative or absolute)\n  filename = (pattern === pathPattern)\n    ? getTagAttribute(filePathAttribute, arr[ndx])\n    : getTagAttribute(\"absPath\", arr[ndx]);\n\n  // build filepath if its relative\n  fpath = (pattern === pathPattern)\n    ? buildPathFromRelativePath(file.path, filename)\n    : filename;\n\n  // find closing tag\n  endNdx = findIndexOfClosingTag('<!--#wrap', '<!--#endwrap', ndx, arr);\n\n  // If we have no closing tag, then this is an error\n  if(endNdx === -1) {\n    console.error(\"ERROR: in file \" + file.path + \": <!--#wrap . . . --> with no <!--#endwrap . . . -->\");\n    return \"\";\n  }\n\n  // Get the wrap file and split it in the middle\n  if(wrapFiles[fpath]) {\n    content = wrapFiles[fpath].content.split(/<!--#middle\\s*-->/);\n    if(content.length !== 2) {\n      console.error(\"ERROR: in file \" + file.path + \": wrap file has no <!--#middle--> or more than one <!--#middle--> tags\");\n      return \"\";\n    }\n  }\n  else {\n    console.error(\"ERROR: in file \" + file.path + \": no wrapFile by the name `\" + filename + \"`\");\n    return \"\";\n  }\n\n  arr[ndx] = [rawJson, jsonParentPath, file.tmpPath, content[0]];\n  arr[endNdx] = [rawJson, jsonParentPath, file.tmpPath, content[1]];\n  return [ndx, endNdx];\n}\n","import { isWin } from './platform';\nimport { getTagAttribute, setTagAttribute, changeTagAttributeName } from '../attributes';\nimport { splitContent } from './parsing';\nimport { devOptions, insertPattern, filePathAttribute } from '../config';\n\nexport function File(file) {\n  var f = {\n    name : '',\n    path : file.path,\n    content : file.contents.toString('utf8').trim(),\n    processed : false,\n    file : file\n  };\n\n  f.name = (isWin) ? file.path.split('\\\\') : file.path.split('/');\n  f.name = f.name[f.name.length-1];\n\n  return f;\n}\n\n// overcome the difference in *nix/windows pathing\nfunction fixFilePathForOS(path) {\n  return (isWin) ? path.replace(/\\//g, '\\\\') : path.replace(/\\\\/g, '/');\n}\n\n// given the current directory and a relative path, build the complete path\n// to the relative path\nexport function buildPathFromRelativePath(cdir, fdir) {\n  var dir,\n      dirChar = (isWin) ? '\\\\' : '/';\n\n  dir = cdir.split(dirChar);\n\n  fdir = fixFilePathForOS(fdir);\n  dir.pop();\n\n  fdir.split(dirChar)\n    .forEach(function(e) {\n      (e === '..') ? dir.pop() : (e !== '.' && e !== '') ? dir.push(e) : void 0;\n    });\n  dir = dir.join(dirChar);\n  if(devOptions.printPaths) {\n    console.log(\"********buildPathFromRelativePath********\")\n    console.log(\"cdir  : \", cdir)\n    console.log(\"fdir  : \", fdir)\n    console.log(\"result: \", dir)\n    console.log(\"********end buildPathFromRelativePath********\")\n  }\n  return dir;\n}\n\n// Updates the relative path with the parent's path so it can be resolved on the\n// next turn\nexport function updateRelativePaths(content, cdir) {\n  var dir = \"\";\n  content = splitContent(content);\n\n  content = content.map(function(fragment) {\n    if(fragment.indexOf(insertPattern)  === 0 ||\n       fragment.indexOf('<!--#wrap')    === 0) {\n      dir = getTagAttribute(filePathAttribute, fragment);\n      dir = buildPathFromRelativePath(cdir, dir);\n      fragment = setTagAttribute(filePathAttribute, fragment, dir);\n      fragment = changeTagAttributeName(filePathAttribute, fragment, \"absPath\");\n    }\n    return fragment;\n  })\n\n  content = content.join('');\n  return content;\n}","import { toSafeJsonString } from '../json';\nimport { options } from '../config';\n\n// given a jsonObject and a path, return the data pointed at\nexport function getDataFromJsonPath(jsonPath, jsonObj) {\n  var json = jsonObj || options.jsonInput;\n  var result;\n\n  if(jsonPath === '*') return options.jsonInput;\n  if(jsonPath === 'this') return json;\n  result = jsonPath.split('.').reduce((acc, cur) => acc ? acc[cur] : '', json)\n\n  if(Array.isArray(result));\n  else if(typeof(result) === 'object')\n    result = toSafeJsonString(result);\n\n  return result;\n}\n\n// Given some content (starting with a tag) find the index after the matching end tag\nexport function getIndexOfClosingBrace(content, startPattern, endPattern) {\n  let tagDepth = 0;// when this gets to 0 we are done\n  let tmpContent = content.substr(1);\n\n\n  // prime loop by finding next start tag\n  let nextCloseNdx = tmpContent.indexOf(endPattern);\n  let nextOpenNdx = tmpContent.indexOf(startPattern);\n\n  if(nextCloseNdx ===  -1)\n    console.trace(`No Close tag for startPattern: ${startPattern} and endPattern: ${endPattern} and content: ${content}`);\n\n  // if there is a nextCloseNdx, but no openNdx, return the end of the tag.\n  if(nextOpenNdx === -1 || nextOpenNdx > nextCloseNdx)\n    return nextCloseNdx + 4; // 4 not 3 because we sliced off the '<' in content\n\n  // add 1 so we will search past the tag\n  nextOpenNdx += 1;\n  nextCloseNdx += 1;\n\n  // while current tag is not closed...\n  do {\n    let tmpOpen, tmpClosed;\n\n    // start tag is before close tag, then\n    // we can look to see if there is yet another tag nested between\n    if(nextOpenNdx > -1 && nextOpenNdx < nextCloseNdx) {\n      tmpOpen = tmpContent.substr(nextOpenNdx).indexOf(startPattern);\n      // see if we found something, and add this new index to our accumulator\n      if(tmpOpen > -1) {\n        // add 1 because we need next search to be beyond this tag\n        nextOpenNdx += tmpOpen + 2;\n        tagDepth += 1;\n      }\n      else\n        nextOpenNdx = -1;\n    }\n    else { // current close tag is before start tag\n      tmpClosed = tmpContent.substr(nextCloseNdx).indexOf(endPattern);\n      // see if we found something, and add this new index to our accumulator\n      if(tmpClosed > -1) {\n        // add 1 because we need next search to be beyond this tag\n        nextCloseNdx += tmpClosed + 1;\n        tagDepth -= 1;\n\n        if(tagDepth === 0)\n          return nextCloseNdx + 3;\n      }\n      else if(tagDepth > 0) {\n        console.error('There is an unclosed tag', content);\n        break;\n      }\n    }\n  } while(tagDepth > 0)\n\n  nextCloseNdx += 4;\n\n  if(nextCloseNdx === -1)\n    console.error(\"ERROR: no closing tag! you are missing a '\" + endPattern + \"'\");\n\n\n  return nextCloseNdx;\n}\n\n// Splits a string into an array where special tags are on their own\n// can optionally only split it up based on a particular tag\nexport function splitContent(content, tag) {\n  let arr = [],\n      openNdx = -1,\n      closeNdx = -1,\n      partial = \"\",\n      startPattern = tag || '<!--#',\n      endPattern = '-->';\n\n  //prime the loop\n  openNdx = content.indexOf(startPattern);\n\n  if(openNdx === -1)\n    return [content];\n\n  while(openNdx > -1) {\n    partial = content.slice(0, openNdx);\n    if(partial)\n      arr.push(partial);\n\n    content = content.slice(openNdx);\n\n    // get the closeNdx despite inner open tags\n    // openNdx-><!-- <!-- --> <!-- <!-- --> --> --><-closeNdx\n    let closeNdx = getIndexOfClosingBrace(content, startPattern, endPattern);\n\n    partial = content.slice(0, closeNdx);\n    arr.push(partial);\n    content = content.slice(closeNdx);\n\n    // get ready for next iteration\n    openNdx = content.indexOf(startPattern);\n\n    // on final pass, push the remainer of the content string\n    if(openNdx === -1)\n      arr.push(content);\n  }\n\n  // Now we have an array of tags, and content\n  return arr;\n}\n\n// ToDo. These should go to a better place, for now only one place was using a\n// magic number\nconst RAW_JSON_NDX  = 0;\nconst JSON_PATH_NDX = 1;\nconst FILE_PATH_NDX = 2;\nconst CONTENT_NDX   = 3;\n\n// returns the index of the closing tag for a given opening tag\nexport function findIndexOfClosingTag(openTag, closeTag, startNdx, arr) {\n  var endNdx = -1;\n  var openCount = 1;\n\n  for(var i = startNdx + 1; i < arr.length; i++) {\n    let fragment = (Array.isArray(arr[i]))\n      ? arr[i][CONTENT_NDX] // [i] contains [rawJson, jsonPath, filePath, content]\n      : arr[i];\n\n    if(fragment.indexOf(openTag) === 0)\n      openCount++;\n    else if(fragment.indexOf(closeTag) === 0) {\n      openCount--;\n      if(openCount === 0) {\n        endNdx = i;\n        break;\n      }\n    }\n  }\n  return endNdx;\n}\n","export const isWin = /^win/.test(process.platform);\n"],"sourceRoot":""}